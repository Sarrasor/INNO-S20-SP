// Instruction transfer API description
// Used to generate python gRPC classes

syntax = "proto3";
import "google/protobuf/timestamp.proto";

// Important line for Java compatibility
// Will get "Not implemented" without it
package instruction;

message Timestamp {
    google.protobuf.Timestamp timestamp = 1;
}

// Chunks for big files requests
message Chunk {
    bytes buffer = 1; 
}

// Status to indicate if data was received or not
message Status {
    int32 status = 1;
}

// empty message to be used in rpc
message EmptyRequest {}

// will be used by a Client to request an instruction by its id
message InstructionRequest {
    string id = 1;
}

// Instruction metadata
message InstructionMeta {
    string id = 1;
    string name = 2;
    int32 size = 3;
    string description = 4;
    bytes preview_url = 5;
    Timestamp last_modified = 6;
    /* more metadata */
}

// Instruction - collection of slides
message InstructionData {
    repeated Slide slides = 1;
}

// One slide might containt multiple Objects
message Slide {
    // Kind of object is determined by enum MediaType
    message Object {
        message Transform {
            message Vector3 {
                float x = 1;
                float y = 2;
                float z = 3;
            }
            Vector3 position = 1;
            Vector3 rotation = 2;
            float scale = 3;
        }
        message Media {
            enum MediaType {
                IMAGE = 0; //default not default? no default?
                AUDIO = 1;
                VIDEO = 2;
                MODEL = 3;
            }
            MediaType type = 1;
            string url = 2;
            string description = 3;
        }      
        Media media = 1;
        Transform transform = 2;
        bool hidden = 3;
    }
    string name = 1;
    string description = 2;
    string preview_url = 3;
    repeated Object objects = 4;
}

// please create a name for the service
service DobriyVecher {
    // request all the instructions - response with metadata
    rpc GetAllInstructions(EmptyRequest) returns (InstructionMeta) {}
    // request one instructions - response with downloading all the instruction's data
    rpc GetInstruction(InstructionRequest) returns (InstructionData) {}
    // request to download media for an instruction; media is chucked
    rpc DownloadMedia(InstructionRequest) returns (stream Chunk) {}
    // upload media to the server and receive a status - uploaded or not
    rpc UploadInstruction(stream Chunk) returns (Status) {}
    // Check when the object was modified last time
    rpc LastModified(InstructionRequest) returns (Timestamp) {}
}