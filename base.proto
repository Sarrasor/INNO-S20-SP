// Instruction transfer API description
// Used to generate python gRPC classes

syntax = "proto3";

// Important line for Java compatibility
// Will get "Not implemented" without it
package instruction;

// Chunks for big files requests
message Chunk {
    bytes buffer = 1; 
}

//empty message to be used in rpc
message EmptyRequest {}

// will be used by a Client to request an instruction by its id
message InstructionRequest {
    string id = 1;
}

message InstructionMeta {
    string id = 1;
    string name = 2;
    int32 size = 3;
    string description = 4;
    bytes preview_url = 5;
    string modified = 6;
    /* more metadata */
}

message InstructionData {
    repeated Slide slides = 1; // Instruction - collection of slides
}

message Slide {
    message Object { 
        int32 type = 1; // ==0 => content represents text, ==1-4 => content represents url
        string description = 2;
        string content = 3; // depends on media_type as described above
        string position = 4;
        string rotation = 5;
        float init_scale = 6;
    }
    string name = 1;
    string description = 2;
    string preview_url = 3; 
    repeated Object objects = 4; // Slide - collection of objects
}

message Status {
    int32 status = 1;
}

// please create a name for the service
service DobriyVecher {
    // request all the instructions - response with metadata
    rpc GetAllInstructions(EmptyRequest) returns (InstructionMeta) {}
    // request one instructions - response with downloading all the instruction's data
    rpc GetInstruction(InstructionRequest) returns (InstructionData) {}

    rpc DownloadMedia(InstructionRequest) returns (stream Chunk) {}

    rpc UploadMedia(stream Chunk) returns (Status) {}
}